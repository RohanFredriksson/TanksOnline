<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Tanks Online</title>
  <link rel="stylesheet" type="text/css" href="css/main.css" />
  <meta name="viewport" content="width=device-width">
</head>
<body class="hidden-scroll nooverflow">

  <header class="headertitle">
    <p style="padding-top: 0.4vh; padding-left: 0.5vw;">Tanks Online</p> 
  </header>

  <div class="bg"></div>
  <div class="bg bg2"></div>
  <div class="bg bg3"></div>

  <!--
  <div id="violet" style="width:100px; height:100px; background-color: blueviolet;"></div>
  <div id="red" style="width:100px; height:100px; background-color: red;"></div>
  <div id="green" style="width:100px; height:100px; background-color: chartreuse"></div>
  -->
  <div id="desktop">

    <!-- Landing Page Button Box -->
    <div class="desktopbox content" style="margin-left: 17.5%;">
      <ul style="list-style-type: none; margin:0%; padding:0%">
        <li><p style="margin-top:0%; text-align: center;">Create Room</p></li>
        <li><p style="margin-top:0%; text-align: center;">Join Room</p></li>
      </ul>
    </div>
    
    <!-- Tank Customisation Box -->
    <div class="desktopbox content" style="margin-left: 52.5%;">
      <ul style="list-style-type: none; margin:0%; padding:0%">
        <li><p style="margin-top:0%; text-align: center;">Create Room</p></li>
        <li><p style="margin-top:0%; text-align: center;">Join Room</p></li>
      </ul>
    </div>

  </div>

  <div id="phone">

    <!-- Landing Page Button Box -->
    <div class="phonebox content" style="margin-left: 17.5%;">
      <ul style="list-style-type: none; margin:0%; padding:0%">
        <li><p style="margin-top:0%; text-align: center;">Create Room</p></li>
        <li><p style="margin-top:0%; text-align: center;">Join Room</p></li>
      </ul>
    </div>

  </div>

  <div id="wide">

    <!-- Landing Page Button Box -->
    <div class="widebox content" style="margin-left: 17.5%;">
      <ul style="list-style-type: none; margin:0%; padding:0%">
        <li><p style="margin-top:0%; text-align: center;">Create Room</p></li>
        <li><p style="margin-top:0%; text-align: center;">Join Room</p></li>
      </ul>
    </div>
    
    <!-- Tank Customisation Box -->
    <div class="widebox content" style="margin-left: 52.5%;">
      <ul style="list-style-type: none; margin:0%; padding:0%">
        <li><p style="margin-top:0%; text-align: center;">Create Room</p></li>
        <li><p style="margin-top:0%; text-align: center;">Join Room</p></li>
      </ul>
    </div>

  </div>
  
  <!-- Line in centre of screen 
  <div style="position: absolute; margin-left: 50%; height: 100vh; width: 1px; background-color: black;"></div>
  -->
  <footer></footer>

  <script>

    const ip = "<%- ip %>";

    var id = "";
    var isConnected = false;
    var inRoom = false;

    var socket = new WebSocket("ws://192.168.1.5:8999");
    // var socket = new WebSocket("ws://" + ip  +":8999");

    socket.onopen = function (event) {
      isConnected = true;
      getId();
      checkInRoom();
    };

    socket.onclose = function (event) {
      isConnected = false;
      inRoom = false;
    }

    socket.onmessage = function (event) {
      
      message = event.data;
      message = JSON.parse(message);

      if ("type" in message) {

        if (message.type == 'game_data') {
          console.log(message.data);
        } 
        
        else if (message.type == 'in_room') {
          inRoom = message.data;
        } 
        
        else if (message.type == 'id') {
          id = message.data;
        }

      }

    }

    // Will create a room and join it if you are not in a room.
    // If in a room, this will do nothing.
    function createRoom() {
      if (isConnected && !inRoom) {
        socket.send(JSON.stringify({command:"create",args:[]}));
        checkInRoom();
      }
    }

    // Joins the room with the given number.
    function joinRoom(room) {
      if (isConnected) {
        socket.send(JSON.stringify({command:"join",args:[room]}));
        checkInRoom();
      }
    }

    // Sends input command to the room.
    function input(command) {
      if (isConnected) {
        socket.send(JSON.stringify({command:"input",args:[command]}));
      }
    }

    // Will update the inRoom variable.
    function checkInRoom() {
      if (isConnected) {
        socket.send(JSON.stringify({command:"in_room",args:[]}));
      }
    }

    // Will request game data from the server.
    function requestGameData() {
      if (isConnected) {
        socket.send(JSON.stringify({command:"get_game_data",args:[]}));
      }
    }

    // Will request the player id from the server.
    function getId() {
      if (isConnected) {
        socket.send(JSON.stringify({command:"get_id",args:[]}));
      }
    }
    
  </script>

  <script>

    violet = document.getElementById("violet");
    red = document.getElementById("red");
    green = document.getElementById("green");

    violet.addEventListener('click', () => {
      createRoom();
    });

    red.addEventListener('click', () => {
      roomNumber = prompt("Enter a room number:");
      joinRoom(roomNumber);
    });

    green.addEventListener('click', () => {
      createRoom();
    });

    document.addEventListener('keydown', () => {
      console.log('id: ' + id);
      console.log('isConnected: ' + isConnected);
      console.log('inRoom: ' + inRoom);
    });

  </script>

</body>
</html>