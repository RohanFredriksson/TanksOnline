<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('../partials/head'); %>
</head>
<body class="hidden-scroll">

  <header>
    <%- include('../partials/header'); %>
  </header> 

  <h1 id="message">Waiting for more players.</h1>

  <div id="gameboard">
    <div id="mainsquare">
      <div class="square">
        <div class="content">
          <div class="vl" style="left:33.33%;"></div>
          <div class="vl" style="left: 66.66%;"></div>
          <div class="hl" style="top: 33.33%;"></div>
          <div class="hl" style="top: 66.66%;"></div>

          <div class='tictactoesquare' id="1" style="top:0%; left:0%;">
            <div class="cross">
              <div class="crossarm1"></div>
              <div class="crossarm2"></div>
            </div>
            <div class="nought"></div>
          </div>

          <div class='tictactoesquare' id="2" style="top:0%; left:33.33%;">
            <div class="cross">
              <div class="crossarm1"></div>
              <div class="crossarm2"></div>
            </div>
            <div class="nought"></div>
          </div>

          <div class='tictactoesquare' id="3" style="top:0%; left:66.66%;">
            <div class="cross">
              <div class="crossarm1"></div>
              <div class="crossarm2"></div>
            </div>
            <div class="nought"></div>
          </div>

          <div class='tictactoesquare' id="4" style="top:33.33%; left:0%;">
            <div class="cross">
              <div class="crossarm1"></div>
              <div class="crossarm2"></div>
            </div>
            <div class="nought"></div>
          </div>

          <div class='tictactoesquare' id="5" style="top:33.33%; left:33.33%;">
            <div class="cross">
              <div class="crossarm1"></div>
              <div class="crossarm2"></div>
            </div>
            <div class="nought"></div>
          </div>

          <div class='tictactoesquare' id="6" style="top:33.33%; left:66.66%;">
            <div class="cross">
              <div class="crossarm1"></div>
              <div class="crossarm2"></div>
            </div>
            <div class="nought"></div>
          </div>

          <div class='tictactoesquare' id="7" style="top:66.66%; left:0%;">
            <div class="cross">
              <div class="crossarm1"></div>
              <div class="crossarm2"></div>
            </div>
            <div class="nought"></div>
          </div>

          <div class='tictactoesquare' id="8" style="top:66.66%; left:33.33%;">
            <div class="cross">
              <div class="crossarm1"></div>
              <div class="crossarm2"></div>
            </div>
            <div class="nought"></div>
          </div>

          <div class='tictactoesquare' id="9" style="top:66.66%; left:66.66%;">
            <div class="cross">
              <div class="crossarm1"></div>
              <div class="crossarm2"></div>
            </div>
            <div class="nought"></div>
          </div>

        </div>
      </div>
    </div>  
  </div>
  
  

  <footer>
    <%- include('../partials/footer'); %>
  </footer>  

</body>
<script>

  // Set necessary JS for page formatting.
  function resize() {
    message = document.getElementById('message');
    gameBoard = document.getElementById('gameboard');
    mainSquare = document.getElementById('mainsquare');
    
    gameBoard.style.height = window.innerHeight - message.getBoundingClientRect().height + 'px';
    
    mainSquare.style.width = Math.min(gameBoard.getBoundingClientRect().height,gameBoard.getBoundingClientRect().width) + 'px';
    mainSquare.style.height = Math.min(gameBoard.getBoundingClientRect().height,gameBoard.getBoundingClientRect().width) + 'px';
    mainSquare.style.margin = 'auto';
  }
  
  // Whenever the window size changes reformat page.
  window.addEventListener('resize',resize);
  window.addEventListener('DOMContentLoaded',resize);
    
  // Get the room number of the page.
  url = window.location.href;
  roomNumber = url.substring(url.length-4,url.length)

  // If room is full, send the user back to the landing page.
  fetch("/inRoom",{
    method: "POST",
    headers: {"Content-Type": "application/json"},
    body: JSON.stringify({number: roomNumber})
  }).then((res) => {
    if (res.ok) {
      return res.json();
    } else {
      throw new Error ('Fetch request failed.');
    }
  }).then((json) => {
    if (json.inRoom == false) {
      window.location.href = "/";
    }
  });

  // Get all game square objects
  squares = []
  
  i = 1;
  n = 9;

  while (i <= n) {
    squares.push(document.getElementById(i + ''));
    i = i + 1;
  }

  squares[0].addEventListener('click',function() {sendInput(0,0);});
  squares[1].addEventListener('click',function() {sendInput(1,0);});
  squares[2].addEventListener('click',function() {sendInput(2,0);});
  squares[3].addEventListener('click',function() {sendInput(0,1);});
  squares[4].addEventListener('click',function() {sendInput(1,1);});
  squares[5].addEventListener('click',function() {sendInput(2,1);});
  squares[6].addEventListener('click',function() {sendInput(0,2);});
  squares[7].addEventListener('click',function() {sendInput(1,2);});
  squares[8].addEventListener('click',function() {sendInput(2,2);});

  function resetSquares() {
    squares.forEach(square => square.children[0].style.display = 'none');
    squares.forEach(square => square.children[1].style.display = 'none');
  }

  function drawBoard(board) {
    resetSquares();
    boardState = board[0].concat(board[1].concat(board[2]));
    var i = 0;
    console.log(boardState);
    while (i < 9) {
      if (boardState[i] == 0) {
        squares[i].children[0].style.display = 'inline-block';
      } else if (boardState[i] == 1) {
        squares[i].children[1].style.display = 'inline-block';
      }
      i = i + 1;
    }
  }

  function sendInput(x,y) {

    fetch("/sendInput",{
      method: "POST",
      headers: {"Content-Type": "application/json"},
      body: JSON.stringify({
        number: roomNumber,
        x: x,
        y: y,
      })
    }).then((res) => {
      if (res.ok) {
        return res.json();
      } else {
        throw new Error ('Fetch request failed.');
      }
    }).then((json) => {
      console.log(json)
    });

  }

  setInterval(() => {

    fetch("/getGameState",{
      method: "POST",
      headers: {"Content-Type": "application/json"},
      body: JSON.stringify({number: roomNumber, input: "a"})
    }).then((res) => {
      if (res.ok) {
        return res.json();
      } else {
        throw new Error ('Fetch request failed.');
      }
    }).then((json) => {
      console.log(json)
      drawBoard(json.gameState.board);
    });

  },1000);

</script>
</html>